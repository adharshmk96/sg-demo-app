# Generated by Django 3.2.7 on 2021-09-06 11:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Department Name')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Created')),
                ('udpated', models.DateTimeField(auto_now_add=True, verbose_name='Updated')),
            ],
            options={
                'verbose_name': 'department',
                'verbose_name_plural': 'departments',
            },
        ),
        migrations.CreateModel(
            name='Identity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='SG ID')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Created')),
                ('udpated', models.DateTimeField(auto_now_add=True, verbose_name='Updated')),
            ],
            options={
                'verbose_name': 'identity',
                'verbose_name_plural': 'identitys',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70, verbose_name='Name')),
                ('department', models.CharField(max_length=70, verbose_name='Department')),
                ('imporove', models.TextField(verbose_name='Improve Constant')),
                ('before_image', models.ImageField(upload_to='before_image', verbose_name='Before Image')),
                ('after_image', models.ImageField(upload_to='after_image', verbose_name='After Image')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Created')),
                ('udpated', models.DateTimeField(auto_now_add=True, verbose_name='Updated')),
                ('department_which', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='approval.department', verbose_name='Improve department in which')),
                ('sgid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='approval.identity', verbose_name='SG ID')),
            ],
            options={
                'verbose_name': 'request',
                'verbose_name_plural': 'requests',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Created')),
                ('udpated', models.DateTimeField(auto_now_add=True, verbose_name='Updated')),
                ('app_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='approval.request')),
            ],
            options={
                'verbose_name': 'report',
                'verbose_name_plural': 'reports',
            },
        ),
        migrations.CreateModel(
            name='Rejected',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Created')),
                ('udpated', models.DateTimeField(auto_now_add=True, verbose_name='Updated')),
                ('app_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_reject', to='approval.request', verbose_name='Approval Two Request')),
            ],
            options={
                'verbose_name': 'rejected',
                'verbose_name_plural': 'rejecteds',
            },
        ),
        migrations.CreateModel(
            name='ApprovalTwo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False, verbose_name='Approve')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Created')),
                ('udpated', models.DateTimeField(auto_now_add=True, verbose_name='Updated')),
                ('app_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_a2', to='approval.request', verbose_name='Approval Two Request')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'approval',
                'verbose_name_plural': 'approvals',
                'permissions': (('level_two_approval', 'Level Two Approval'),),
            },
        ),
        migrations.CreateModel(
            name='ApprovalOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False, verbose_name='Approve')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Created')),
                ('udpated', models.DateTimeField(auto_now_add=True, verbose_name='Updated')),
                ('app_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_a1', to='approval.request', verbose_name='Approval Request')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'approval',
                'verbose_name_plural': 'approvals',
                'permissions': (('level_one_approval', 'Level One Approval'),),
            },
        ),
    ]
